{
  "contractName": "NoteUtils",
  "abi": [],
  "metadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"AZTEC\",\"details\":\"NoteUtils is a utility library that extracts user-readable information from AZTEC proof outputs.     Specifically, `bytes proofOutput` objects can be extracted from `bytes proofOutputs`,     `bytes proofOutput` and `bytes note` can be extracted into their constituent components, * Copyright 2020 Spilsbury Holdings Ltd  * Licensed under the GNU Lesser General Public Licence, Version 3.0 (the \\\"License\\\"); you may not use this file except in compliance with the License. * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public License for more details. * You should have received a copy of the GNU Lesser General Public License along with this program.  If not, see <https://www.gnu.org/licenses/>.*\",\"methods\":{},\"title\":\"NoteUtils\"},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"@aztec/protocol/contracts/libs/NoteUtils.sol\":\"NoteUtils\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":500},\"remappings\":[]},\"sources\":{\"@aztec/protocol/contracts/libs/NoteUtils.sol\":{\"keccak256\":\"0xe1f4cb0e01304169106f6114a4044eabfde25beaf4f8b2362823391a55474548\",\"urls\":[\"bzz-raw://a5a45ce057e7c30e82f2dcb3af8c9b61a5ff6e4092430c36958698b8ff5c5df1\",\"dweb:/ipfs/QmeCW5rErow3E153DBAdM5SrpS6EiF62c52iD3m6Mtk5zj\"]}},\"version\":1}",
  "bytecode": "0x60556023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a7231582050e43cdf4b69e395182e4426b07b2930ed42600444172c30b4de4ab1e7b6ff8d64736f6c63430005110032",
  "deployedBytecode": "0x73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a7231582050e43cdf4b69e395182e4426b07b2930ed42600444172c30b4de4ab1e7b6ff8d64736f6c63430005110032",
  "sourceMap": "985:5510:37:-;;132:2:-1;166:7;155:9;146:7;137:37;255:7;249:14;246:1;241:23;235:4;232:33;222:2;;269:9;222:2;293:9;290:1;283:20;323:4;314:7;306:22;347:7;338;331:24",
  "deployedSourceMap": "985:5510:37:-;;;;;;;;",
  "source": "pragma solidity >=0.5.0 <0.6.0;\n\n/**\n * @title NoteUtils\n * @author AZTEC\n * @dev NoteUtils is a utility library that extracts user-readable information from AZTEC proof outputs.\n *      Specifically, `bytes proofOutput` objects can be extracted from `bytes proofOutputs`,\n *      `bytes proofOutput` and `bytes note` can be extracted into their constituent components,\n *\n * Copyright 2020 Spilsbury Holdings Ltd \n *\n * Licensed under the GNU Lesser General Public Licence, Version 3.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\n**/\nlibrary NoteUtils {\n\n    /**\n    * @dev Get the number of entries in an AZTEC-ABI array (bytes proofOutputs, bytes inputNotes, bytes outputNotes)\n    *      All 3 are rolled into a single function to eliminate 'wet' code - the implementations are identical\n    * @param _proofOutputsOrNotes `proofOutputs`, `inputNotes` or `outputNotes`\n    * @return number of entries in the pseudo dynamic array\n    */\n    function getLength(bytes memory _proofOutputsOrNotes) internal pure returns (\n        uint len\n    ) {\n        assembly {\n            // first word = the raw byte length\n            // second word = the actual number of entries (hence the 0x20 offset)\n            len := mload(add(_proofOutputsOrNotes, 0x20))\n        }\n    }\n\n    /**\n    * @dev Get a bytes object out of a dynamic AZTEC-ABI array\n    * @param _proofOutputsOrNotes `proofOutputs`, `inputNotes` or `outputNotes`\n    * @param _i the desired entry\n    * @return number of entries in the pseudo dynamic array\n    */\n    function get(bytes memory _proofOutputsOrNotes, uint _i) internal pure returns (\n        bytes memory out\n    ) {\n        bool valid;\n        assembly {\n            // check that i < the number of entries\n            valid := lt(\n                _i,\n                mload(add(_proofOutputsOrNotes, 0x20))\n            )\n            // memory map of the array is as follows:\n            // 0x00 - 0x20 : byte length of array\n            // 0x20 - 0x40 : n, the number of entries\n            // 0x40 - 0x40 + (0x20 * i) : relative memory offset to start of i'th entry (i <= n)\n\n            // Step 1: compute location of relative memory offset: _proofOutputsOrNotes + 0x40 + (0x20 * i) \n            // Step 2: loaded relative offset and add to _proofOutputsOrNotes to get absolute memory location\n            out := add(\n                mload(\n                    add(\n                        add(_proofOutputsOrNotes, 0x40),\n                        mul(_i, 0x20)\n                    )\n                ),\n                _proofOutputsOrNotes\n            )\n        }\n        require(valid, \"AZTEC array index is out of bounds\");\n    }\n\n    /**\n    * @dev Extract constituent elements of a `bytes _proofOutput` object\n    * @param _proofOutput an AZTEC proof output\n    * @return inputNotes, AZTEC-ABI dynamic array of input AZTEC notes\n    * @return outputNotes, AZTEC-ABI dynamic array of output AZTEC notes\n    * @return publicOwner, the Ethereum address of the owner of any public tokens involved in the proof\n    * @return publicValue, the amount of public tokens involved in the proof\n    *         if (publicValue > 0), this represents a transfer of tokens from ACE to publicOwner\n    *         if (publicValue < 0), this represents a transfer of tokens from publicOwner to ACE\n    */\n    function extractProofOutput(bytes memory _proofOutput) internal pure returns (\n        bytes memory inputNotes,\n        bytes memory outputNotes,\n        address publicOwner,\n        int256 publicValue\n    ) {\n        assembly {\n            // memory map of a proofOutput:\n            // 0x00 - 0x20 : byte length of proofOutput\n            // 0x20 - 0x40 : relative offset to inputNotes\n            // 0x40 - 0x60 : relative offset to outputNotes\n            // 0x60 - 0x80 : publicOwner\n            // 0x80 - 0xa0 : publicValue\n            // 0xa0 - 0xc0 : challenge\n            inputNotes := add(_proofOutput, mload(add(_proofOutput, 0x20)))\n            outputNotes := add(_proofOutput, mload(add(_proofOutput, 0x40)))\n            publicOwner := and(\n                mload(add(_proofOutput, 0x60)),\n                0xffffffffffffffffffffffffffffffffffffffff\n            )\n            publicValue := mload(add(_proofOutput, 0x80))\n        }\n    }\n\n    /**\n    * @dev Extract the challenge from a bytes proofOutput variable\n    * @param _proofOutput bytes proofOutput, outputted from a proof validation smart contract\n    * @return bytes32 challenge - cryptographic variable that is part of the sigma protocol\n    */\n    function extractChallenge(bytes memory _proofOutput) internal pure returns (\n        bytes32 challenge\n    ) {\n        assembly {\n            challenge := mload(add(_proofOutput, 0xa0))\n        }\n    }\n\n    /**\n    * @dev Extract constituent elements of an AZTEC note\n    * @param _note an AZTEC note\n    * @return owner, Ethereum address of note owner\n    * @return noteHash, the hash of the note's public key\n    * @return metadata, note-specific metadata (contains public key and any extra data needed by note owner)\n    */\n    function extractNote(bytes memory _note) internal pure returns (\n            address owner,\n            bytes32 noteHash,\n            bytes memory metadata\n    ) {\n        assembly {\n            // memory map of a note:\n            // 0x00 - 0x20 : byte length of note\n            // 0x20 - 0x40 : note type\n            // 0x40 - 0x60 : owner\n            // 0x60 - 0x80 : noteHash\n            // 0x80 - 0xa0 : start of metadata byte array\n            owner := and(\n                mload(add(_note, 0x40)),\n                0xffffffffffffffffffffffffffffffffffffffff\n            )\n            noteHash := mload(add(_note, 0x60))\n            metadata := add(_note, 0x80)\n        }\n    }\n    \n    /**\n    * @dev Get the note type\n    * @param _note an AZTEC note\n    * @return noteType\n    */\n    function getNoteType(bytes memory _note) internal pure returns (\n        uint256 noteType\n    ) {\n        assembly {\n            noteType := mload(add(_note, 0x20))\n        }\n    }\n}\n",
  "sourcePath": "@aztec/protocol/contracts/libs/NoteUtils.sol",
  "ast": {
    "absolutePath": "@aztec/protocol/contracts/libs/NoteUtils.sol",
    "exportedSymbols": {
      "NoteUtils": [
        4938
      ]
    },
    "id": 4939,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 4863,
        "literals": [
          "solidity",
          ">=",
          "0.5",
          ".0",
          "<",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:31:37"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "library",
        "documentation": "@title NoteUtils\n@author AZTEC\n@dev NoteUtils is a utility library that extracts user-readable information from AZTEC proof outputs.\n     Specifically, `bytes proofOutput` objects can be extracted from `bytes proofOutputs`,\n     `bytes proofOutput` and `bytes note` can be extracted into their constituent components,\n * Copyright 2020 Spilsbury Holdings Ltd \n * Licensed under the GNU Lesser General Public Licence, Version 3.0 (the \"License\");\nyou may not use this file except in compliance with the License.\n * This program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n * You should have received a copy of the GNU Lesser General Public License\nalong with this program.  If not, see <https://www.gnu.org/licenses/>.*",
        "fullyImplemented": true,
        "id": 4938,
        "linearizedBaseContracts": [
          4938
        ],
        "name": "NoteUtils",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 4871,
              "nodeType": "Block",
              "src": "1494:224:37",
              "statements": [
                {
                  "externalReferences": [
                    {
                      "len": {
                        "declaration": 4868,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "1657:3:37",
                        "valueSize": 1
                      }
                    },
                    {
                      "_proofOutputsOrNotes": {
                        "declaration": 4865,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "1674:20:37",
                        "valueSize": 1
                      }
                    }
                  ],
                  "id": 4870,
                  "nodeType": "InlineAssembly",
                  "operations": "{\n    len := mload(add(_proofOutputsOrNotes, 0x20))\n}",
                  "src": "1504:208:37"
                }
              ]
            },
            "documentation": "@dev Get the number of entries in an AZTEC-ABI array (bytes proofOutputs, bytes inputNotes, bytes outputNotes)\n     All 3 are rolled into a single function to eliminate 'wet' code - the implementations are identical\n@param _proofOutputsOrNotes `proofOutputs`, `inputNotes` or `outputNotes`\n@return number of entries in the pseudo dynamic array",
            "id": 4872,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getLength",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4866,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4865,
                  "name": "_proofOutputsOrNotes",
                  "nodeType": "VariableDeclaration",
                  "scope": 4872,
                  "src": "1412:33:37",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 4864,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1412:5:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1411:35:37"
            },
            "returnParameters": {
              "id": 4869,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4868,
                  "name": "len",
                  "nodeType": "VariableDeclaration",
                  "scope": 4872,
                  "src": "1479:8:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4867,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1479:4:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1469:24:37"
            },
            "scope": 4938,
            "src": "1393:325:37",
            "stateMutability": "pure",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 4890,
              "nodeType": "Block",
              "src": "2088:1018:37",
              "statements": [
                {
                  "assignments": [
                    4882
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4882,
                      "name": "valid",
                      "nodeType": "VariableDeclaration",
                      "scope": 4890,
                      "src": "2098:10:37",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 4881,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "2098:4:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 4883,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2098:10:37"
                },
                {
                  "externalReferences": [
                    {
                      "valid": {
                        "declaration": 4882,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "2193:5:37",
                        "valueSize": 1
                      }
                    },
                    {
                      "_proofOutputsOrNotes": {
                        "declaration": 4874,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "2252:20:37",
                        "valueSize": 1
                      }
                    },
                    {
                      "_i": {
                        "declaration": 4876,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "2222:2:37",
                        "valueSize": 1
                      }
                    },
                    {
                      "out": {
                        "declaration": 4879,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "2782:3:37",
                        "valueSize": 1
                      }
                    },
                    {
                      "_proofOutputsOrNotes": {
                        "declaration": 4874,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "2870:20:37",
                        "valueSize": 1
                      }
                    },
                    {
                      "_i": {
                        "declaration": 4876,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "2927:2:37",
                        "valueSize": 1
                      }
                    },
                    {
                      "_proofOutputsOrNotes": {
                        "declaration": 4874,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "2994:20:37",
                        "valueSize": 1
                      }
                    }
                  ],
                  "id": 4884,
                  "nodeType": "InlineAssembly",
                  "operations": "{\n    valid := lt(_i, mload(add(_proofOutputsOrNotes, 0x20)))\n    out := add(mload(add(add(_proofOutputsOrNotes, 0x40), mul(_i, 0x20))), _proofOutputsOrNotes)\n}",
                  "src": "2118:920:37"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 4886,
                        "name": "valid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4882,
                        "src": "3055:5:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "415a54454320617272617920696e646578206973206f7574206f6620626f756e6473",
                        "id": 4887,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3062:36:37",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fef7e11d006e37ebeaba4d36fa21ef80f0c14fc265baea30291d0e8494d1ee17",
                          "typeString": "literal_string \"AZTEC array index is out of bounds\""
                        },
                        "value": "AZTEC array index is out of bounds"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fef7e11d006e37ebeaba4d36fa21ef80f0c14fc265baea30291d0e8494d1ee17",
                          "typeString": "literal_string \"AZTEC array index is out of bounds\""
                        }
                      ],
                      "id": 4885,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6095,
                        6096
                      ],
                      "referencedDeclaration": 6096,
                      "src": "3047:7:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4888,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3047:52:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4889,
                  "nodeType": "ExpressionStatement",
                  "src": "3047:52:37"
                }
              ]
            },
            "documentation": "@dev Get a bytes object out of a dynamic AZTEC-ABI array\n@param _proofOutputsOrNotes `proofOutputs`, `inputNotes` or `outputNotes`\n@param _i the desired entry\n@return number of entries in the pseudo dynamic array",
            "id": 4891,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "get",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4877,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4874,
                  "name": "_proofOutputsOrNotes",
                  "nodeType": "VariableDeclaration",
                  "scope": 4891,
                  "src": "1989:33:37",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 4873,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1989:5:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4876,
                  "name": "_i",
                  "nodeType": "VariableDeclaration",
                  "scope": 4891,
                  "src": "2024:7:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4875,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2024:4:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1988:44:37"
            },
            "returnParameters": {
              "id": 4880,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4879,
                  "name": "out",
                  "nodeType": "VariableDeclaration",
                  "scope": 4891,
                  "src": "2065:16:37",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 4878,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2065:5:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2055:32:37"
            },
            "scope": 4938,
            "src": "1976:1130:37",
            "stateMutability": "pure",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 4905,
              "nodeType": "Block",
              "src": "3975:740:37",
              "statements": [
                {
                  "externalReferences": [
                    {
                      "inputNotes": {
                        "declaration": 4896,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "4348:10:37",
                        "valueSize": 1
                      }
                    },
                    {
                      "_proofOutput": {
                        "declaration": 4893,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "4390:12:37",
                        "valueSize": 1
                      }
                    },
                    {
                      "_proofOutput": {
                        "declaration": 4893,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "4366:12:37",
                        "valueSize": 1
                      }
                    },
                    {
                      "outputNotes": {
                        "declaration": 4898,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "4424:11:37",
                        "valueSize": 1
                      }
                    },
                    {
                      "_proofOutput": {
                        "declaration": 4893,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "4467:12:37",
                        "valueSize": 1
                      }
                    },
                    {
                      "_proofOutput": {
                        "declaration": 4893,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "4443:12:37",
                        "valueSize": 1
                      }
                    },
                    {
                      "publicValue": {
                        "declaration": 4902,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "4654:11:37",
                        "valueSize": 1
                      }
                    },
                    {
                      "publicOwner": {
                        "declaration": 4900,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "4501:11:37",
                        "valueSize": 1
                      }
                    },
                    {
                      "_proofOutput": {
                        "declaration": 4893,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "4547:12:37",
                        "valueSize": 1
                      }
                    },
                    {
                      "_proofOutput": {
                        "declaration": 4893,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "4679:12:37",
                        "valueSize": 1
                      }
                    }
                  ],
                  "id": 4904,
                  "nodeType": "InlineAssembly",
                  "operations": "{\n    inputNotes := add(_proofOutput, mload(add(_proofOutput, 0x20)))\n    outputNotes := add(_proofOutput, mload(add(_proofOutput, 0x40)))\n    publicOwner := and(mload(add(_proofOutput, 0x60)), 0xffffffffffffffffffffffffffffffffffffffff)\n    publicValue := mload(add(_proofOutput, 0x80))\n}",
                  "src": "3985:724:37"
                }
              ]
            },
            "documentation": "@dev Extract constituent elements of a `bytes _proofOutput` object\n@param _proofOutput an AZTEC proof output\n@return inputNotes, AZTEC-ABI dynamic array of input AZTEC notes\n@return outputNotes, AZTEC-ABI dynamic array of output AZTEC notes\n@return publicOwner, the Ethereum address of the owner of any public tokens involved in the proof\n@return publicValue, the amount of public tokens involved in the proof\n        if (publicValue > 0), this represents a transfer of tokens from ACE to publicOwner\n        if (publicValue < 0), this represents a transfer of tokens from publicOwner to ACE",
            "id": 4906,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "extractProofOutput",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4894,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4893,
                  "name": "_proofOutput",
                  "nodeType": "VariableDeclaration",
                  "scope": 4906,
                  "src": "3795:25:37",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 4892,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "3795:5:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3794:27:37"
            },
            "returnParameters": {
              "id": 4903,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4896,
                  "name": "inputNotes",
                  "nodeType": "VariableDeclaration",
                  "scope": 4906,
                  "src": "3854:23:37",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 4895,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "3854:5:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4898,
                  "name": "outputNotes",
                  "nodeType": "VariableDeclaration",
                  "scope": 4906,
                  "src": "3887:24:37",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 4897,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "3887:5:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4900,
                  "name": "publicOwner",
                  "nodeType": "VariableDeclaration",
                  "scope": 4906,
                  "src": "3921:19:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4899,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3921:7:37",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4902,
                  "name": "publicValue",
                  "nodeType": "VariableDeclaration",
                  "scope": 4906,
                  "src": "3950:18:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 4901,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3950:6:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3844:130:37"
            },
            "scope": 4938,
            "src": "3767:948:37",
            "stateMutability": "pure",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 4914,
              "nodeType": "Block",
              "src": "5098:92:37",
              "statements": [
                {
                  "externalReferences": [
                    {
                      "challenge": {
                        "declaration": 4911,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "5131:9:37",
                        "valueSize": 1
                      }
                    },
                    {
                      "_proofOutput": {
                        "declaration": 4908,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "5154:12:37",
                        "valueSize": 1
                      }
                    }
                  ],
                  "id": 4913,
                  "nodeType": "InlineAssembly",
                  "operations": "{\n    challenge := mload(add(_proofOutput, 0xa0))\n}",
                  "src": "5108:76:37"
                }
              ]
            },
            "documentation": "@dev Extract the challenge from a bytes proofOutput variable\n@param _proofOutput bytes proofOutput, outputted from a proof validation smart contract\n@return bytes32 challenge - cryptographic variable that is part of the sigma protocol",
            "id": 4915,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "extractChallenge",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4909,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4908,
                  "name": "_proofOutput",
                  "nodeType": "VariableDeclaration",
                  "scope": 4915,
                  "src": "5015:25:37",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 4907,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "5015:5:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5014:27:37"
            },
            "returnParameters": {
              "id": 4912,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4911,
                  "name": "challenge",
                  "nodeType": "VariableDeclaration",
                  "scope": 4915,
                  "src": "5074:17:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 4910,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "5074:7:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5064:33:37"
            },
            "scope": 4938,
            "src": "4989:201:37",
            "stateMutability": "pure",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 4927,
              "nodeType": "Block",
              "src": "5682:521:37",
              "statements": [
                {
                  "externalReferences": [
                    {
                      "owner": {
                        "declaration": 4920,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "5971:5:37",
                        "valueSize": 1
                      }
                    },
                    {
                      "_note": {
                        "declaration": 4917,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "6011:5:37",
                        "valueSize": 1
                      }
                    },
                    {
                      "metadata": {
                        "declaration": 4924,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "6159:8:37",
                        "valueSize": 1
                      }
                    },
                    {
                      "noteHash": {
                        "declaration": 4922,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "6111:8:37",
                        "valueSize": 1
                      }
                    },
                    {
                      "_note": {
                        "declaration": 4917,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "6133:5:37",
                        "valueSize": 1
                      }
                    },
                    {
                      "_note": {
                        "declaration": 4917,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "6175:5:37",
                        "valueSize": 1
                      }
                    }
                  ],
                  "id": 4926,
                  "nodeType": "InlineAssembly",
                  "operations": "{\n    owner := and(mload(add(_note, 0x40)), 0xffffffffffffffffffffffffffffffffffffffff)\n    noteHash := mload(add(_note, 0x60))\n    metadata := add(_note, 0x80)\n}",
                  "src": "5692:505:37"
                }
              ]
            },
            "documentation": "@dev Extract constituent elements of an AZTEC note\n@param _note an AZTEC note\n@return owner, Ethereum address of note owner\n@return noteHash, the hash of the note's public key\n@return metadata, note-specific metadata (contains public key and any extra data needed by note owner)",
            "id": 4928,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "extractNote",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4918,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4917,
                  "name": "_note",
                  "nodeType": "VariableDeclaration",
                  "scope": 4928,
                  "src": "5541:18:37",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 4916,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "5541:5:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5540:20:37"
            },
            "returnParameters": {
              "id": 4925,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4920,
                  "name": "owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 4928,
                  "src": "5597:13:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4919,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5597:7:37",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4922,
                  "name": "noteHash",
                  "nodeType": "VariableDeclaration",
                  "scope": 4928,
                  "src": "5624:16:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 4921,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "5624:7:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4924,
                  "name": "metadata",
                  "nodeType": "VariableDeclaration",
                  "scope": 4928,
                  "src": "5654:21:37",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 4923,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "5654:5:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5583:98:37"
            },
            "scope": 4938,
            "src": "5520:683:37",
            "stateMutability": "pure",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 4936,
              "nodeType": "Block",
              "src": "6409:84:37",
              "statements": [
                {
                  "externalReferences": [
                    {
                      "noteType": {
                        "declaration": 4933,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "6442:8:37",
                        "valueSize": 1
                      }
                    },
                    {
                      "_note": {
                        "declaration": 4930,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "6464:5:37",
                        "valueSize": 1
                      }
                    }
                  ],
                  "id": 4935,
                  "nodeType": "InlineAssembly",
                  "operations": "{\n    noteType := mload(add(_note, 0x20))\n}",
                  "src": "6419:68:37"
                }
              ]
            },
            "documentation": "@dev Get the note type\n@param _note an AZTEC note\n@return noteType",
            "id": 4937,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getNoteType",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4931,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4930,
                  "name": "_note",
                  "nodeType": "VariableDeclaration",
                  "scope": 4937,
                  "src": "6334:18:37",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 4929,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "6334:5:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6333:20:37"
            },
            "returnParameters": {
              "id": 4934,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4933,
                  "name": "noteType",
                  "nodeType": "VariableDeclaration",
                  "scope": 4937,
                  "src": "6386:16:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4932,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6386:7:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6376:32:37"
            },
            "scope": 4938,
            "src": "6313:180:37",
            "stateMutability": "pure",
            "superFunction": null,
            "visibility": "internal"
          }
        ],
        "scope": 4939,
        "src": "985:5510:37"
      }
    ],
    "src": "0:6496:37"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "@aztec/protocol/contracts/libs/NoteUtils.sol",
      "exportedSymbols": {
        "NoteUtils": [
          4938
        ]
      }
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            ">=",
            "0.5",
            ".0",
            "<",
            "0.6",
            ".0"
          ]
        },
        "id": 4863,
        "name": "PragmaDirective",
        "src": "0:31:37"
      },
      {
        "attributes": {
          "baseContracts": [
            null
          ],
          "contractDependencies": [
            null
          ],
          "contractKind": "library",
          "documentation": "@title NoteUtils\n@author AZTEC\n@dev NoteUtils is a utility library that extracts user-readable information from AZTEC proof outputs.\n     Specifically, `bytes proofOutput` objects can be extracted from `bytes proofOutputs`,\n     `bytes proofOutput` and `bytes note` can be extracted into their constituent components,\n * Copyright 2020 Spilsbury Holdings Ltd \n * Licensed under the GNU Lesser General Public Licence, Version 3.0 (the \"License\");\nyou may not use this file except in compliance with the License.\n * This program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n * You should have received a copy of the GNU Lesser General Public License\nalong with this program.  If not, see <https://www.gnu.org/licenses/>.*",
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            4938
          ],
          "name": "NoteUtils",
          "scope": 4939
        },
        "children": [
          {
            "attributes": {
              "documentation": "@dev Get the number of entries in an AZTEC-ABI array (bytes proofOutputs, bytes inputNotes, bytes outputNotes)\n     All 3 are rolled into a single function to eliminate 'wet' code - the implementations are identical\n@param _proofOutputsOrNotes `proofOutputs`, `inputNotes` or `outputNotes`\n@return number of entries in the pseudo dynamic array",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "getLength",
              "scope": 4938,
              "stateMutability": "pure",
              "superFunction": null,
              "visibility": "internal"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "_proofOutputsOrNotes",
                      "scope": 4872,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "bytes",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bytes",
                          "type": "bytes"
                        },
                        "id": 4864,
                        "name": "ElementaryTypeName",
                        "src": "1412:5:37"
                      }
                    ],
                    "id": 4865,
                    "name": "VariableDeclaration",
                    "src": "1412:33:37"
                  }
                ],
                "id": 4866,
                "name": "ParameterList",
                "src": "1411:35:37"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "len",
                      "scope": 4872,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint",
                          "type": "uint256"
                        },
                        "id": 4867,
                        "name": "ElementaryTypeName",
                        "src": "1479:4:37"
                      }
                    ],
                    "id": 4868,
                    "name": "VariableDeclaration",
                    "src": "1479:8:37"
                  }
                ],
                "id": 4869,
                "name": "ParameterList",
                "src": "1469:24:37"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "externalReferences": [
                        {
                          "len": {
                            "declaration": 4868,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "1657:3:37",
                            "valueSize": 1
                          }
                        },
                        {
                          "_proofOutputsOrNotes": {
                            "declaration": 4865,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "1674:20:37",
                            "valueSize": 1
                          }
                        }
                      ],
                      "operations": "{\n    len := mload(add(_proofOutputsOrNotes, 0x20))\n}"
                    },
                    "children": [],
                    "id": 4870,
                    "name": "InlineAssembly",
                    "src": "1504:208:37"
                  }
                ],
                "id": 4871,
                "name": "Block",
                "src": "1494:224:37"
              }
            ],
            "id": 4872,
            "name": "FunctionDefinition",
            "src": "1393:325:37"
          },
          {
            "attributes": {
              "documentation": "@dev Get a bytes object out of a dynamic AZTEC-ABI array\n@param _proofOutputsOrNotes `proofOutputs`, `inputNotes` or `outputNotes`\n@param _i the desired entry\n@return number of entries in the pseudo dynamic array",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "get",
              "scope": 4938,
              "stateMutability": "pure",
              "superFunction": null,
              "visibility": "internal"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "_proofOutputsOrNotes",
                      "scope": 4891,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "bytes",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bytes",
                          "type": "bytes"
                        },
                        "id": 4873,
                        "name": "ElementaryTypeName",
                        "src": "1989:5:37"
                      }
                    ],
                    "id": 4874,
                    "name": "VariableDeclaration",
                    "src": "1989:33:37"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "_i",
                      "scope": 4891,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint",
                          "type": "uint256"
                        },
                        "id": 4875,
                        "name": "ElementaryTypeName",
                        "src": "2024:4:37"
                      }
                    ],
                    "id": 4876,
                    "name": "VariableDeclaration",
                    "src": "2024:7:37"
                  }
                ],
                "id": 4877,
                "name": "ParameterList",
                "src": "1988:44:37"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "out",
                      "scope": 4891,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "bytes",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bytes",
                          "type": "bytes"
                        },
                        "id": 4878,
                        "name": "ElementaryTypeName",
                        "src": "2065:5:37"
                      }
                    ],
                    "id": 4879,
                    "name": "VariableDeclaration",
                    "src": "2065:16:37"
                  }
                ],
                "id": 4880,
                "name": "ParameterList",
                "src": "2055:32:37"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "assignments": [
                        4882
                      ],
                      "initialValue": null
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "valid",
                          "scope": 4890,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "bool",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "bool",
                              "type": "bool"
                            },
                            "id": 4881,
                            "name": "ElementaryTypeName",
                            "src": "2098:4:37"
                          }
                        ],
                        "id": 4882,
                        "name": "VariableDeclaration",
                        "src": "2098:10:37"
                      }
                    ],
                    "id": 4883,
                    "name": "VariableDeclarationStatement",
                    "src": "2098:10:37"
                  },
                  {
                    "attributes": {
                      "externalReferences": [
                        {
                          "valid": {
                            "declaration": 4882,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "2193:5:37",
                            "valueSize": 1
                          }
                        },
                        {
                          "_proofOutputsOrNotes": {
                            "declaration": 4874,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "2252:20:37",
                            "valueSize": 1
                          }
                        },
                        {
                          "_i": {
                            "declaration": 4876,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "2222:2:37",
                            "valueSize": 1
                          }
                        },
                        {
                          "out": {
                            "declaration": 4879,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "2782:3:37",
                            "valueSize": 1
                          }
                        },
                        {
                          "_proofOutputsOrNotes": {
                            "declaration": 4874,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "2870:20:37",
                            "valueSize": 1
                          }
                        },
                        {
                          "_i": {
                            "declaration": 4876,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "2927:2:37",
                            "valueSize": 1
                          }
                        },
                        {
                          "_proofOutputsOrNotes": {
                            "declaration": 4874,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "2994:20:37",
                            "valueSize": 1
                          }
                        }
                      ],
                      "operations": "{\n    valid := lt(_i, mload(add(_proofOutputsOrNotes, 0x20)))\n    out := add(mload(add(add(_proofOutputsOrNotes, 0x40), mul(_i, 0x20))), _proofOutputsOrNotes)\n}"
                    },
                    "children": [],
                    "id": 4884,
                    "name": "InlineAssembly",
                    "src": "2118:920:37"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_fef7e11d006e37ebeaba4d36fa21ef80f0c14fc265baea30291d0e8494d1ee17",
                                  "typeString": "literal_string \"AZTEC array index is out of bounds\""
                                }
                              ],
                              "overloadedDeclarations": [
                                6095,
                                6096
                              ],
                              "referencedDeclaration": 6096,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 4885,
                            "name": "Identifier",
                            "src": "3047:7:37"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 4882,
                              "type": "bool",
                              "value": "valid"
                            },
                            "id": 4886,
                            "name": "Identifier",
                            "src": "3055:5:37"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "415a54454320617272617920696e646578206973206f7574206f6620626f756e6473",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "string",
                              "type": "literal_string \"AZTEC array index is out of bounds\"",
                              "value": "AZTEC array index is out of bounds"
                            },
                            "id": 4887,
                            "name": "Literal",
                            "src": "3062:36:37"
                          }
                        ],
                        "id": 4888,
                        "name": "FunctionCall",
                        "src": "3047:52:37"
                      }
                    ],
                    "id": 4889,
                    "name": "ExpressionStatement",
                    "src": "3047:52:37"
                  }
                ],
                "id": 4890,
                "name": "Block",
                "src": "2088:1018:37"
              }
            ],
            "id": 4891,
            "name": "FunctionDefinition",
            "src": "1976:1130:37"
          },
          {
            "attributes": {
              "documentation": "@dev Extract constituent elements of a `bytes _proofOutput` object\n@param _proofOutput an AZTEC proof output\n@return inputNotes, AZTEC-ABI dynamic array of input AZTEC notes\n@return outputNotes, AZTEC-ABI dynamic array of output AZTEC notes\n@return publicOwner, the Ethereum address of the owner of any public tokens involved in the proof\n@return publicValue, the amount of public tokens involved in the proof\n        if (publicValue > 0), this represents a transfer of tokens from ACE to publicOwner\n        if (publicValue < 0), this represents a transfer of tokens from publicOwner to ACE",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "extractProofOutput",
              "scope": 4938,
              "stateMutability": "pure",
              "superFunction": null,
              "visibility": "internal"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "_proofOutput",
                      "scope": 4906,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "bytes",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bytes",
                          "type": "bytes"
                        },
                        "id": 4892,
                        "name": "ElementaryTypeName",
                        "src": "3795:5:37"
                      }
                    ],
                    "id": 4893,
                    "name": "VariableDeclaration",
                    "src": "3795:25:37"
                  }
                ],
                "id": 4894,
                "name": "ParameterList",
                "src": "3794:27:37"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "inputNotes",
                      "scope": 4906,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "bytes",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bytes",
                          "type": "bytes"
                        },
                        "id": 4895,
                        "name": "ElementaryTypeName",
                        "src": "3854:5:37"
                      }
                    ],
                    "id": 4896,
                    "name": "VariableDeclaration",
                    "src": "3854:23:37"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "outputNotes",
                      "scope": 4906,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "bytes",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bytes",
                          "type": "bytes"
                        },
                        "id": 4897,
                        "name": "ElementaryTypeName",
                        "src": "3887:5:37"
                      }
                    ],
                    "id": 4898,
                    "name": "VariableDeclaration",
                    "src": "3887:24:37"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "publicOwner",
                      "scope": 4906,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 4899,
                        "name": "ElementaryTypeName",
                        "src": "3921:7:37"
                      }
                    ],
                    "id": 4900,
                    "name": "VariableDeclaration",
                    "src": "3921:19:37"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "publicValue",
                      "scope": 4906,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "int256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "int256",
                          "type": "int256"
                        },
                        "id": 4901,
                        "name": "ElementaryTypeName",
                        "src": "3950:6:37"
                      }
                    ],
                    "id": 4902,
                    "name": "VariableDeclaration",
                    "src": "3950:18:37"
                  }
                ],
                "id": 4903,
                "name": "ParameterList",
                "src": "3844:130:37"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "externalReferences": [
                        {
                          "inputNotes": {
                            "declaration": 4896,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "4348:10:37",
                            "valueSize": 1
                          }
                        },
                        {
                          "_proofOutput": {
                            "declaration": 4893,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "4390:12:37",
                            "valueSize": 1
                          }
                        },
                        {
                          "_proofOutput": {
                            "declaration": 4893,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "4366:12:37",
                            "valueSize": 1
                          }
                        },
                        {
                          "outputNotes": {
                            "declaration": 4898,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "4424:11:37",
                            "valueSize": 1
                          }
                        },
                        {
                          "_proofOutput": {
                            "declaration": 4893,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "4467:12:37",
                            "valueSize": 1
                          }
                        },
                        {
                          "_proofOutput": {
                            "declaration": 4893,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "4443:12:37",
                            "valueSize": 1
                          }
                        },
                        {
                          "publicValue": {
                            "declaration": 4902,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "4654:11:37",
                            "valueSize": 1
                          }
                        },
                        {
                          "publicOwner": {
                            "declaration": 4900,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "4501:11:37",
                            "valueSize": 1
                          }
                        },
                        {
                          "_proofOutput": {
                            "declaration": 4893,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "4547:12:37",
                            "valueSize": 1
                          }
                        },
                        {
                          "_proofOutput": {
                            "declaration": 4893,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "4679:12:37",
                            "valueSize": 1
                          }
                        }
                      ],
                      "operations": "{\n    inputNotes := add(_proofOutput, mload(add(_proofOutput, 0x20)))\n    outputNotes := add(_proofOutput, mload(add(_proofOutput, 0x40)))\n    publicOwner := and(mload(add(_proofOutput, 0x60)), 0xffffffffffffffffffffffffffffffffffffffff)\n    publicValue := mload(add(_proofOutput, 0x80))\n}"
                    },
                    "children": [],
                    "id": 4904,
                    "name": "InlineAssembly",
                    "src": "3985:724:37"
                  }
                ],
                "id": 4905,
                "name": "Block",
                "src": "3975:740:37"
              }
            ],
            "id": 4906,
            "name": "FunctionDefinition",
            "src": "3767:948:37"
          },
          {
            "attributes": {
              "documentation": "@dev Extract the challenge from a bytes proofOutput variable\n@param _proofOutput bytes proofOutput, outputted from a proof validation smart contract\n@return bytes32 challenge - cryptographic variable that is part of the sigma protocol",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "extractChallenge",
              "scope": 4938,
              "stateMutability": "pure",
              "superFunction": null,
              "visibility": "internal"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "_proofOutput",
                      "scope": 4915,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "bytes",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bytes",
                          "type": "bytes"
                        },
                        "id": 4907,
                        "name": "ElementaryTypeName",
                        "src": "5015:5:37"
                      }
                    ],
                    "id": 4908,
                    "name": "VariableDeclaration",
                    "src": "5015:25:37"
                  }
                ],
                "id": 4909,
                "name": "ParameterList",
                "src": "5014:27:37"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "challenge",
                      "scope": 4915,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "bytes32",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bytes32",
                          "type": "bytes32"
                        },
                        "id": 4910,
                        "name": "ElementaryTypeName",
                        "src": "5074:7:37"
                      }
                    ],
                    "id": 4911,
                    "name": "VariableDeclaration",
                    "src": "5074:17:37"
                  }
                ],
                "id": 4912,
                "name": "ParameterList",
                "src": "5064:33:37"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "externalReferences": [
                        {
                          "challenge": {
                            "declaration": 4911,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "5131:9:37",
                            "valueSize": 1
                          }
                        },
                        {
                          "_proofOutput": {
                            "declaration": 4908,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "5154:12:37",
                            "valueSize": 1
                          }
                        }
                      ],
                      "operations": "{\n    challenge := mload(add(_proofOutput, 0xa0))\n}"
                    },
                    "children": [],
                    "id": 4913,
                    "name": "InlineAssembly",
                    "src": "5108:76:37"
                  }
                ],
                "id": 4914,
                "name": "Block",
                "src": "5098:92:37"
              }
            ],
            "id": 4915,
            "name": "FunctionDefinition",
            "src": "4989:201:37"
          },
          {
            "attributes": {
              "documentation": "@dev Extract constituent elements of an AZTEC note\n@param _note an AZTEC note\n@return owner, Ethereum address of note owner\n@return noteHash, the hash of the note's public key\n@return metadata, note-specific metadata (contains public key and any extra data needed by note owner)",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "extractNote",
              "scope": 4938,
              "stateMutability": "pure",
              "superFunction": null,
              "visibility": "internal"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "_note",
                      "scope": 4928,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "bytes",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bytes",
                          "type": "bytes"
                        },
                        "id": 4916,
                        "name": "ElementaryTypeName",
                        "src": "5541:5:37"
                      }
                    ],
                    "id": 4917,
                    "name": "VariableDeclaration",
                    "src": "5541:18:37"
                  }
                ],
                "id": 4918,
                "name": "ParameterList",
                "src": "5540:20:37"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "owner",
                      "scope": 4928,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 4919,
                        "name": "ElementaryTypeName",
                        "src": "5597:7:37"
                      }
                    ],
                    "id": 4920,
                    "name": "VariableDeclaration",
                    "src": "5597:13:37"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "noteHash",
                      "scope": 4928,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "bytes32",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bytes32",
                          "type": "bytes32"
                        },
                        "id": 4921,
                        "name": "ElementaryTypeName",
                        "src": "5624:7:37"
                      }
                    ],
                    "id": 4922,
                    "name": "VariableDeclaration",
                    "src": "5624:16:37"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "metadata",
                      "scope": 4928,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "bytes",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bytes",
                          "type": "bytes"
                        },
                        "id": 4923,
                        "name": "ElementaryTypeName",
                        "src": "5654:5:37"
                      }
                    ],
                    "id": 4924,
                    "name": "VariableDeclaration",
                    "src": "5654:21:37"
                  }
                ],
                "id": 4925,
                "name": "ParameterList",
                "src": "5583:98:37"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "externalReferences": [
                        {
                          "owner": {
                            "declaration": 4920,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "5971:5:37",
                            "valueSize": 1
                          }
                        },
                        {
                          "_note": {
                            "declaration": 4917,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "6011:5:37",
                            "valueSize": 1
                          }
                        },
                        {
                          "metadata": {
                            "declaration": 4924,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "6159:8:37",
                            "valueSize": 1
                          }
                        },
                        {
                          "noteHash": {
                            "declaration": 4922,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "6111:8:37",
                            "valueSize": 1
                          }
                        },
                        {
                          "_note": {
                            "declaration": 4917,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "6133:5:37",
                            "valueSize": 1
                          }
                        },
                        {
                          "_note": {
                            "declaration": 4917,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "6175:5:37",
                            "valueSize": 1
                          }
                        }
                      ],
                      "operations": "{\n    owner := and(mload(add(_note, 0x40)), 0xffffffffffffffffffffffffffffffffffffffff)\n    noteHash := mload(add(_note, 0x60))\n    metadata := add(_note, 0x80)\n}"
                    },
                    "children": [],
                    "id": 4926,
                    "name": "InlineAssembly",
                    "src": "5692:505:37"
                  }
                ],
                "id": 4927,
                "name": "Block",
                "src": "5682:521:37"
              }
            ],
            "id": 4928,
            "name": "FunctionDefinition",
            "src": "5520:683:37"
          },
          {
            "attributes": {
              "documentation": "@dev Get the note type\n@param _note an AZTEC note\n@return noteType",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "getNoteType",
              "scope": 4938,
              "stateMutability": "pure",
              "superFunction": null,
              "visibility": "internal"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "_note",
                      "scope": 4937,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "bytes",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bytes",
                          "type": "bytes"
                        },
                        "id": 4929,
                        "name": "ElementaryTypeName",
                        "src": "6334:5:37"
                      }
                    ],
                    "id": 4930,
                    "name": "VariableDeclaration",
                    "src": "6334:18:37"
                  }
                ],
                "id": 4931,
                "name": "ParameterList",
                "src": "6333:20:37"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "noteType",
                      "scope": 4937,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 4932,
                        "name": "ElementaryTypeName",
                        "src": "6386:7:37"
                      }
                    ],
                    "id": 4933,
                    "name": "VariableDeclaration",
                    "src": "6386:16:37"
                  }
                ],
                "id": 4934,
                "name": "ParameterList",
                "src": "6376:32:37"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "externalReferences": [
                        {
                          "noteType": {
                            "declaration": 4933,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "6442:8:37",
                            "valueSize": 1
                          }
                        },
                        {
                          "_note": {
                            "declaration": 4930,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "6464:5:37",
                            "valueSize": 1
                          }
                        }
                      ],
                      "operations": "{\n    noteType := mload(add(_note, 0x20))\n}"
                    },
                    "children": [],
                    "id": 4935,
                    "name": "InlineAssembly",
                    "src": "6419:68:37"
                  }
                ],
                "id": 4936,
                "name": "Block",
                "src": "6409:84:37"
              }
            ],
            "id": 4937,
            "name": "FunctionDefinition",
            "src": "6313:180:37"
          }
        ],
        "id": 4938,
        "name": "ContractDefinition",
        "src": "985:5510:37"
      }
    ],
    "id": 4939,
    "name": "SourceUnit",
    "src": "0:6496:37"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.17+commit.d19bba13.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.3",
  "updatedAt": "2021-11-16T18:37:31.152Z",
  "devdoc": {
    "author": "AZTEC",
    "details": "NoteUtils is a utility library that extracts user-readable information from AZTEC proof outputs.     Specifically, `bytes proofOutput` objects can be extracted from `bytes proofOutputs`,     `bytes proofOutput` and `bytes note` can be extracted into their constituent components, * Copyright 2020 Spilsbury Holdings Ltd  * Licensed under the GNU Lesser General Public Licence, Version 3.0 (the \"License\"); you may not use this file except in compliance with the License. * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public License for more details. * You should have received a copy of the GNU Lesser General Public License along with this program.  If not, see <https://www.gnu.org/licenses/>.*",
    "methods": {},
    "title": "NoteUtils"
  },
  "userdoc": {
    "methods": {}
  }
}